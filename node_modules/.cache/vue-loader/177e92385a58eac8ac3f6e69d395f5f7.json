{"remainingRequest":"/Users/vincehe/code/circle-animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vincehe/code/circle-animation/src/components/canvasCircle.vue?vue&type=style&index=0&id=5e5eaf50&scoped=true&lang=css&","dependencies":[{"path":"/Users/vincehe/code/circle-animation/src/components/canvasCircle.vue","mtime":1560850699864},{"path":"/Users/vincehe/code/circle-animation/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/vincehe/code/circle-animation/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/vincehe/code/circle-animation/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/vincehe/code/circle-animation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vincehe/code/circle-animation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncanvas{\n    margin: 10px;\n}\n",{"version":3,"sources":["canvasCircle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA","file":"canvasCircle.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"canvas\">\n    <canvas :id=\"id\" width=\"136\" height=\"136\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      num:0,\n      canvas: {\n          width: 136,\n          height: 136\n      },\n      context: '',\n      cirX: '',\n      cirY: '',\n      rad: '',\n      n: 1,\n      speed: 150,\n      r: 68\n    }\n  },\n  props:[\n    'percent',\n    'id'\n  ],\n  //元素挂载后开始绘制并且获取\n  mounted () {\n    this.canvas = document.getElementById(this.id)\n    this.context = this.canvas.getContext(\"2d\")\n    // this.context.scale(2,2);\n    this.cirX = 68\n    this.cirY = 68\n    this.rad = Math.PI * 2 / 100\n    this.DreamLoading()\n  },\n  created () {\n\n  },\n  methods:{\n    //绘制最外层细圈\n    writeCircle(){\n        this.context.save();         //save和restore可以保证样式属性只运用于该段canvas元素\n        this.context.beginPath();    //开始路径\n        this.context.strokeStyle = \"#CACCD7\";       //设置边线的颜色\n        this.context.lineWidth = 17;\n        this.context.arc(this.cirX, this.cirY, this.r, 0, Math.PI * 2, false);      //画一个圆的路径\n        this.context.stroke();       //绘制边线\n//      this.context.restore();\n        this.context.closePath();\n    },\n    //#14c7ca-#00d3a4中心边框\n    //外阴影#caccd7\n    //绘制文本\n    writeText(n){\n        this.context.save();\n        this.context.font = \"20px Arial\";\n        this.context.fillStyle=\"#000\"; //字体颜色\n        this.context.fillText(n.toFixed(0)+\"%\",this.cirX - 20 ,this.cirY + 10); //绘制实心\n        //context.strokeStyle = \"#49f\";\n        // context.strokeText(n.toFixed(0)+\"%\",cirX - 30 ,cirY +10); //绘制空心\n        this.context.stroke();\n        this.context.restore();\n    },\n    //绘制蓝色外圈\n    writeBlue(n){\n        this.context.save();\n        // this.context.strokeStyle = \"#14c7ca\";\n        let grd = this.context.createLinearGradient(136,0,0,136);\n        grd.addColorStop(0, \"#14c7ca\");\n        grd.addColorStop(1, \"#00d3a4\");\n        this.context.strokeStyle=grd;\n        this.context.lineWidth = 17;\n        this.context.lineCap = 'round';\n        this.context.beginPath();\n        this.context.arc(this.cirX, this.cirY, this.r, -Math.PI/2,-Math.PI/2+ this.rad*n, false);\n        this.context.stroke();\n        this.context.restore();\n    },\n    DreamLoading(){\n        // console.log(this.n)\n        //清除所有，重新绘制\n        this.context.clearRect(0,0,this.canvas.width,this.canvas.height)\n\n        this.writeCircle();\n        this.writeText(this.n);\n        this.writeBlue(this.n);\n//      if(this.n < 100 && this.n <= 60){\n        if(this.n <= this.percent){\n            this.n= this.n+0.4;\n        }else {\n          return this.n = 0;\n        }\n        //setTimeout(DreamLoading,speed);\n        requestAnimationFrame(this.DreamLoading);\n    }\n  }\n}\n</script>\n<style scoped>\ncanvas{\n    margin: 10px;\n}\n</style>\n"]}]}