{"remainingRequest":"/Users/vincehe/code/vue-circle-animation/node_modules/babel-loader/lib/index.js!/Users/vincehe/code/vue-circle-animation/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vincehe/code/vue-circle-animation/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vincehe/code/vue-circle-animation/src/components/canvasCircle.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vincehe/code/vue-circle-animation/src/components/canvasCircle.vue","mtime":1561187643923},{"path":"/Users/vincehe/code/vue-circle-animation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vincehe/code/vue-circle-animation/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/vincehe/code/vue-circle-animation/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vincehe/code/vue-circle-animation/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.fill\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      //canvas实例\n      context: '',\n      cirX: '',\n      cirY: '',\n      rad: '',\n      n: 1,\n      r: this.width / 2,\n      fontSize: this.width * (40 / 136)\n    };\n  },\n  props: {\n    //传入百分比\n    percent: {\n      default: 0,\n      type: Number\n    },\n    //显示单位\n    unit: {\n      default: '%',\n      type: String\n    },\n    //传入id\n    id: {\n      default: 0,\n      type: Number\n    },\n    //圆环宽度\n    width: {\n      default: 136,\n      type: Number\n    },\n    //圆环高度\n    height: {\n      default: 136,\n      type: Number\n    },\n    //外圆环粗细\n    ringR: {\n      default: 17,\n      type: Number\n    },\n    //动画速度\n    speed: {\n      default: 0.4,\n      type: Number\n    }\n  },\n  //元素挂载后开始绘制并且获取\n  mounted: function mounted() {\n    this.canvas = document.getElementById(this.id);\n    this.context = this.canvas.getContext(\"2d\"); //所有圆的圆心坐标\n\n    this.cirX = this.width / 2;\n    this.cirY = this.height / 2;\n    this.rad = Math.PI * 2 / 100;\n    this.DreamLoading();\n  },\n  methods: {\n    //绘制最外层细圈\n    drawRing: function drawRing() {\n      this.context.save(); //save和restore保证样式属性只运用于该段canvas元素\n\n      this.context.beginPath(); //开始路径\n\n      this.context.strokeStyle = \"#eceef3\"; //设置边线的颜色\n\n      this.context.lineWidth = this.ringR;\n      this.context.arc(this.cirX, this.cirY, this.r - this.context.lineWidth / 2, 0, Math.PI * 2, false); //画一个圆的路径\n\n      this.context.stroke(); //绘制边线\n\n      this.context.closePath();\n      this.context.restore();\n    },\n    //绘制中心白圆\n    drawCenterWhite: function drawCenterWhite() {\n      this.context.save(); //save和restore可以保证样式属性只运用于该段canvas元素\n\n      this.context.shadowColor = \"#c0c0c0\";\n      this.context.shadowBlur = 8;\n      this.context.shadowOffsetX = 0;\n      this.context.shadowOffsetY = 0;\n      this.context.beginPath();\n      this.context.arc(this.cirX, this.cirY, this.r - this.ringR, 0, Math.PI * 2, false); //画一个圆的路径\n\n      this.context.fillStyle = \"#fff\"; //设置填充颜色  \n\n      this.context.fill();\n      this.context.closePath();\n      this.context.restore();\n    },\n    //绘制渐变外圈\n    drawGradient: function drawGradient(n) {\n      var angle = 2 * Math.PI + Math.PI / 2 - this.rad * n;\n      var xPos = Math.cos(angle) * (this.r - this.ringR / 2) + this.width / 2;\n      var yPos = -Math.sin(angle) * (this.r - this.ringR / 2) + this.height / 2;\n      this.context.save();\n      var grd = this.context.createLinearGradient(this.width / 2, 0, 0, this.height);\n      grd.addColorStop(0, \"#00d3a4\");\n      grd.addColorStop(0.5, \"#14c7ca\");\n      grd.addColorStop(1, \"#14c7ca\");\n      this.context.strokeStyle = grd;\n      this.context.lineWidth = this.ringR;\n      this.context.lineCap = 'round';\n      this.context.beginPath();\n      this.context.arc(this.cirX, this.cirY, this.r - this.context.lineWidth / 2, -Math.PI / 2, -Math.PI / 2 + this.rad * n, false);\n      this.context.stroke();\n      this.context.closePath();\n      this.context.restore();\n    },\n    //绘制文本\n    drawText: function drawText(n) {\n      this.context.save();\n      this.context.font = this.fontSize + 'px' + ' Arial';\n      this.context.fillStyle = \"#000\"; //字体颜色\n\n      this.context.fillText(n.toFixed(0), this.cirX - this.fontSize / 1.5, this.cirY + this.fontSize / 2.5); //绘制数字\n\n      this.context.font = this.fontSize * 0.5 + 'px' + ' Arial';\n      this.context.fillText(this.unit, this.cirX + this.fontSize * 0.5, this.cirY + this.fontSize / 3); //绘制单位\n\n      this.context.restore();\n    },\n    //绘制渐变外圈上的小白圆\n    drawOuterWhite: function drawOuterWhite(n) {\n      var angle = 2 * Math.PI + Math.PI / 2 - this.rad * n;\n      var xPos = Math.cos(angle) * (this.r - this.ringR / 2) + this.width / 2;\n      var yPos = -Math.sin(angle) * (this.r - this.ringR / 2) + this.height / 2;\n      this.context.save();\n      this.context.beginPath();\n      this.context.arc(xPos, yPos, this.ringR / 3, 0, Math.PI * 2, false);\n      this.context.fillStyle = '#fff';\n      this.context.fill();\n      this.context.closePath();\n      this.context.restore();\n    },\n    DreamLoading: function DreamLoading() {\n      //清除所有,重新绘制\n      this.context.clearRect(0, 0, this.width, this.height);\n      this.drawRing();\n      this.drawCenterWhite();\n      this.drawGradient(this.n);\n      this.drawText(this.n);\n      this.drawOuterWhite(this.n); //数字变化\n\n      if (this.n <= this.percent) {\n        this.n = this.n + this.speed;\n      } else {\n        return this.n = 0;\n      } //实现逐帧动画效果\n\n\n      requestAnimationFrame(this.DreamLoading);\n    }\n  }\n};",{"version":3,"sources":["canvasCircle.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"canvas\">\n    <canvas :id=\"id\" :width=\"width\" :height=\"height\"></canvas>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      //canvas实例\n      context: '',\n      cirX: '',\n      cirY: '',\n      rad: '',\n      n: 1,\n      r: this.width/2,\n      fontSize: this.width * (40 / 136),\n    }\n  },\n  props:{\n    //传入百分比\n    percent: {\n      default: 0,\n      type: Number\n    },\n    //显示单位\n    unit: {\n      default: '%',\n      type: String\n    },\n    //传入id\n    id: {\n      default: 0,\n      type: Number\n    },\n    //圆环宽度\n    width: {\n      default: 136,\n      type: Number\n    },\n    //圆环高度\n    height: {\n      default: 136,\n      type: Number\n    },\n    //外圆环粗细\n    ringR: {\n      default: 17,\n      type:Number\n    },\n    //动画速度\n    speed: {\n      default:0.4,\n      type: Number\n    }\n  },\n  //元素挂载后开始绘制并且获取\n  mounted () {\n    this.canvas = document.getElementById(this.id);\n    this.context = this.canvas.getContext(\"2d\");\n    //所有圆的圆心坐标\n    this.cirX = this.width / 2;\n    this.cirY = this.height / 2;\n    this.rad = Math.PI * 2 / 100;\n    this.DreamLoading()\n  },\n  methods:{\n    //绘制最外层细圈\n    drawRing(){\n        this.context.save();         //save和restore保证样式属性只运用于该段canvas元素\n        this.context.beginPath();    //开始路径\n        this.context.strokeStyle = \"#eceef3\";       //设置边线的颜色\n        this.context.lineWidth = this.ringR;\n        this.context.arc(this.cirX, this.cirY, this.r-this.context.lineWidth/2, 0, Math.PI * 2, false);      //画一个圆的路径\n        this.context.stroke();       //绘制边线\n        this.context.closePath();\n        this.context.restore();\n    },\n    //绘制中心白圆\n    drawCenterWhite(){\n        this.context.save();         //save和restore可以保证样式属性只运用于该段canvas元素\n        this.context.shadowColor = \"#c0c0c0\";\n        this.context.shadowBlur = 8;\n        this.context.shadowOffsetX = 0;\n        this.context.shadowOffsetY = 0;\n        this.context.beginPath();\n        this.context.arc(this.cirX, this.cirY, this.r - this.ringR, 0, Math.PI * 2, false);      //画一个圆的路径\n        this.context.fillStyle = \"#fff\";       //设置填充颜色  \n        this.context.fill();\n        this.context.closePath();\n        this.context.restore();\n    },\n    //绘制渐变外圈\n    drawGradient(n){\n        let angle = 2 * Math.PI + Math.PI/2 - this.rad * n;\n        let xPos = Math.cos(angle) * (this.r-this.ringR/2) + this.width/2;\n        let yPos = -Math.sin(angle) * (this.r-this.ringR/2) + this.height/2;\n        this.context.save();\n        let grd = this.context.createLinearGradient(this.width/2,0,0,this.height);\n        grd.addColorStop(0, \"#00d3a4\");\n        grd.addColorStop(0.5, \"#14c7ca\");\n        grd.addColorStop(1, \"#14c7ca\");\n        this.context.strokeStyle=grd;\n        this.context.lineWidth = this.ringR;\n        this.context.lineCap = 'round';\n        this.context.beginPath();\n        this.context.arc(this.cirX, this.cirY, this.r-this.context.lineWidth/2, -Math.PI/2,-Math.PI/2 + this.rad*n, false);\n        this.context.stroke();\n        this.context.closePath();\n        this.context.restore();\n    },\n    //绘制文本\n    drawText(n){\n        this.context.save();\n        this.context.font =  this.fontSize + 'px' + ' Arial';\n        this.context.fillStyle = \"#000\"; //字体颜色\n        this.context.fillText(n.toFixed(0),this.cirX - this.fontSize / 1.5,this.cirY + this.fontSize/2.5); //绘制数字\n        this.context.font =  this.fontSize * 0.5 + 'px' + ' Arial';\n        this.context.fillText(this.unit,this.cirX + this.fontSize * 0.5,this.cirY + this.fontSize/3); //绘制单位\n        this.context.restore();\n    },\n    //绘制渐变外圈上的小白圆\n    drawOuterWhite(n){\n        let angle = 2 * Math.PI + Math.PI/2 - this.rad * n;\n        let xPos = Math.cos(angle) * (this.r-this.ringR/2) + this.width/2;\n        let yPos = -Math.sin(angle) * (this.r-this.ringR/2) + this.height/2;\n        this.context.save();\n        this.context.beginPath();\n        this.context.arc(xPos,yPos,this.ringR/3,0,Math.PI * 2,false);\n        this.context.fillStyle = '#fff';\n        this.context.fill();\n        this.context.closePath();\n        this.context.restore();\n    },  \n    DreamLoading(){\n        //清除所有,重新绘制\n        this.context.clearRect(0,0,this.width,this.height);\n        this.drawRing();\n        this.drawCenterWhite();\n        this.drawGradient(this.n);\n        this.drawText(this.n);\n        this.drawOuterWhite(this.n);\n        //数字变化\n        if(this.n <= this.percent){\n            this.n = this.n + this.speed;\n        }else {\n          return this.n = 0;\n        }\n        //实现逐帧动画效果\n        requestAnimationFrame(this.DreamLoading);\n    }\n  }\n}\n</script>\n<style scoped>\n</style>\n"],"sourceRoot":"src/components"}]}